---
export interface Props {
  title: string
}

const { title } = Astro.props
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div class="square">
      <h1 class="square__text">A</h1>
      <input type="checkbox" name="checkbox" />
    </div>
    <slot />
    <style>
      :root {
        --font-size-base: clamp(1rem, 0.34vw + 0.91rem, 1.19rem);
        --font-size-lg: clamp(1.2rem, 0.7vw + 1.2rem, 1.5rem);
        --font-size-xl: clamp(2.44rem, 2.38vw + 1.85rem, 3.75rem);

        --color-text: hsl(12, 5%, 4%);
        --color-border: hsl(17, 24%, 90%);

        /* Dark light */
        --color-fg: hsl(10, 21%, 95%);
        --color-bg: hsl(12, 5%, 4%);
      }

      @media (prefers-color-scheme: light) {
        :root {
          --color-bg: hsl(10, 21%, 95%);
          --color-fg: hsl(12, 5%, 4%);
        }
      }

      html {
        font-family: system-ui, sans-serif;
        font-size: var(--font-size-base);
        color: var(--color-text);
        background-color: var(--color-bg);
      }

      body {
        margin: 0;
      }
    </style>

    <style is:global>
      h1 {
        font-size: var(--font-size-xl);
      }

      h2 {
        font-size: var(--font-size-lg);
      }

      code {
        font-family: Menlo, Monaco, Lucida Console, Liberation Mono,
          DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace;
      }

      .square {
        display: grid;
        align-content: center;
        justify-content: center;
        margin-inline: auto;
        background-color: var(--color-bg);
        width: clamp(1rem, 5vw + 2rem, 8rem);
        height: 100px;
      }

      .square__text {
        color: var(--color-fg);
      }
    </style>

    <script>
      const colorSchemeToggle = document.querySelector("input[name=checkbox]")

      colorSchemeToggle.addEventListener("change", function () {
        if (this.checked) {
          addCss(":root {--color-bg: #000}")
          addCss(":root {--color-fg: #fff}")
        } else {
          addCss(":root {--color-bg: #fff}")
          addCss(":root {--color-fg: #000}")
        }
      })
      // Add styles
      const addCss = (css: string) => {
        const element = document.createElement("style")
        element.innerText = css
        const newStyle = document.body.appendChild(element)
        return newStyle
      }

      // addCss(".square__text { color: white}")
      addCss(":root {--highlight-color: magenta}")
    </script>
  </body>
</html>
